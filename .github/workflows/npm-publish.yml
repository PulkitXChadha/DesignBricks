name: Publish to NPM

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish (patch, minor, major, or specific version like 1.2.3)'
        required: true
        default: 'patch'

permissions:
  contents: write
  id-token: write

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'
          cache: 'npm'

      - name: Configure Git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Install dependencies
        run: npm ci

      - name: Get current version
        id: current_version
        run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

      - name: Bump version (manual trigger)
        if: github.event_name == 'workflow_dispatch'
        run: |
          if [[ "${{ github.event.inputs.version }}" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            npm version ${{ github.event.inputs.version }} --no-git-tag-version
          else
            npm version ${{ github.event.inputs.version }} --no-git-tag-version
          fi

      - name: Extract version from tag (tag trigger)
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
        run: |
          TAG_VERSION=${GITHUB_REF_NAME#v}
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          if [ "$TAG_VERSION" != "$CURRENT_VERSION" ]; then
            npm version $TAG_VERSION --no-git-tag-version
          else
            echo "Version already matches tag: $TAG_VERSION"
          fi

      - name: Get new version
        id: new_version
        run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

      - name: Check if version exists on NPM
        id: version_check
        run: |
          if npm view designbricks@${{ steps.new_version.outputs.version }} version 2>/dev/null; then
            echo "exists=true" >> $GITHUB_OUTPUT
            echo "Version ${{ steps.new_version.outputs.version }} already exists on NPM"
          else
            echo "exists=false" >> $GITHUB_OUTPUT
            echo "Version ${{ steps.new_version.outputs.version }} is new"
          fi

      - name: Build package
        if: steps.version_check.outputs.exists == 'false'
        run: npm run build

      - name: Publish to NPM with retry
        if: steps.version_check.outputs.exists == 'false'
        run: |
          for i in {1..3}; do
            echo "Attempt $i to publish..."
            if npm publish --provenance --access public; then
              echo "Successfully published!"
              break
            else
              if [ $i -eq 3 ]; then
                echo "Failed to publish after 3 attempts"
                exit 1
              fi
              echo "Publish failed, waiting 30 seconds before retry..."
              sleep 30
            fi
          done
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Commit version changes (manual trigger)
        if: github.event_name == 'workflow_dispatch' && steps.version_check.outputs.exists == 'false'
        run: |
          git add package.json package-lock.json
          git commit -m "chore: bump version to ${{ steps.new_version.outputs.version }}"
          git push

      - name: Create and push tag (manual trigger)
        if: github.event_name == 'workflow_dispatch' && steps.version_check.outputs.exists == 'false'
        run: |
          git tag v${{ steps.new_version.outputs.version }}
          git push origin v${{ steps.new_version.outputs.version }}

      - name: Create GitHub Release
        if: (startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch') && steps.version_check.outputs.exists == 'false'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event_name == 'workflow_dispatch' && format('v{0}', steps.new_version.outputs.version) || github.ref_name }}
          release_name: ${{ github.event_name == 'workflow_dispatch' && format('Release v{0}', steps.new_version.outputs.version) || format('Release {0}', github.ref_name) }}
          body: |
            ## Changes in v${{ steps.new_version.outputs.version }}

            Published to npm: https://www.npmjs.com/package/designbricks

            Install with: `npm install designbricks@${{ steps.new_version.outputs.version }}`
            
            ### What's Changed
            - Version bumped to ${{ steps.new_version.outputs.version }}
            - Published with provenance for enhanced security
          draft: false
          prerelease: false

      - name: Skip publishing (version exists)
        if: steps.version_check.outputs.exists == 'true'
        run: |
          echo "⚠️ Version ${{ steps.new_version.outputs.version }} already exists on NPM, skipping publish"
          echo "If you need to publish a new version, please bump the version number."